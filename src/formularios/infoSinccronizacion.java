/*
    Version 2024.2 ( Depuración de registros de saincronizacion )
*/
package formularios;

import sincronizacionsistema.procesos;
import java.awt.Color;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.time.LocalDateTime;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Timer;

public class infoSinccronizacion extends javax.swing.JFrame {
    public String api_local_path = "";
    public infoSinccronizacion() {
      initComponents();
      this.setLocationRelativeTo((Component)null);
      this.last_sync.setEditable(false);
      startTimer();
      //this.api_local_path = local_path;
      //this.notification_sync.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        last_sync = new javax.swing.JTextField();
        synchronization_depuration_bar = new javax.swing.JProgressBar();
        synchronization_rows_bar = new javax.swing.JProgressBar();
        synchronization_sales_bar_update = new javax.swing.JProgressBar();
        synchronization_returns_bar = new javax.swing.JProgressBar();
        synchronization_sales_validation_bar = new javax.swing.JProgressBar();
        synchronization_sales_bar = new javax.swing.JProgressBar();
        url_field = new javax.swing.JTextField();
        synchronization_rows_start = new javax.swing.JTextField();
        synchronization_sales_start = new javax.swing.JTextField();
        synchronization_returns_start = new javax.swing.JTextField();
        synchronization_movements_start = new javax.swing.JTextField();
        synchronization_sales_validation_start = new javax.swing.JTextField();
        synchronization_product_provider_start = new javax.swing.JTextField();
        synchronization_rows_end = new javax.swing.JTextField();
        synchronization_sales_end = new javax.swing.JTextField();
        synchronization_returns_end = new javax.swing.JTextField();
        synchronization_movements_end = new javax.swing.JTextField();
        synchronization_sales_validation_end = new javax.swing.JTextField();
        synchronization_product_provider_end = new javax.swing.JTextField();
        synchronization_depuration_end = new javax.swing.JTextField();
        synchronization_movements_bar = new javax.swing.JProgressBar();
        synchronization_movements_bar_update = new javax.swing.JProgressBar();
        synchronization_product_provider_bar = new javax.swing.JProgressBar();
        synchronization_product_provider_bar_update = new javax.swing.JProgressBar();
        synchronization_rows_number = new javax.swing.JTextField();
        synchronization_sales_number = new javax.swing.JTextField();
        synchronization_returns_number = new javax.swing.JTextField();
        synchronization_movements_number = new javax.swing.JTextField();
        synchronization_sales_validation_number = new javax.swing.JTextField();
        synchronization_product_provider_number = new javax.swing.JTextField();
        synchronization_transfer_number = new javax.swing.JTextField();
        synchronization_movements_upload = new javax.swing.JTextField();
        synchronization_transfer_upload = new javax.swing.JTextField();
        synchronization_sales_validation_upload = new javax.swing.JTextField();
        synchronization_product_provider_upload = new javax.swing.JTextField();
        synchronization_rows_upload = new javax.swing.JTextField();
        synchronization_sales_upload = new javax.swing.JTextField();
        synchronization_returns_upload = new javax.swing.JTextField();
        synchronization_movements_download = new javax.swing.JTextField();
        synchronization_transfer_download = new javax.swing.JTextField();
        synchronization_sales_validation_download = new javax.swing.JTextField();
        synchronization_product_provider_download = new javax.swing.JTextField();
        synchronization_rows_download = new javax.swing.JTextField();
        synchronization_sales_download = new javax.swing.JTextField();
        synchronization_returns_download = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        url_api_label = new javax.swing.JLabel();
        synchronization_depuration_info = new javax.swing.JLabel();
        synchronization_returns_label = new javax.swing.JLabel();
        synchronization_movements_label = new javax.swing.JLabel();
        synchronization_sales_validation_label = new javax.swing.JLabel();
        synchronization_product__provider_label = new javax.swing.JLabel();
        synchronization_sales_label = new javax.swing.JLabel();
        synchronization_rows_info = new javax.swing.JLabel();
        synchronization_sales_info = new javax.swing.JLabel();
        synchronization_returns_info = new javax.swing.JLabel();
        synchronization_movements_info = new javax.swing.JLabel();
        synchronization_sales_validation_info = new javax.swing.JLabel();
        synchronization_product_provider_info = new javax.swing.JLabel();
        synchronization_rows_label = new javax.swing.JLabel();
        sinchronization_depuration_label = new javax.swing.JLabel();
        synchronization_depuration_start = new javax.swing.JTextField();
        intervalo_sincronizacion_label = new javax.swing.JLabel();
        time_interval_field = new javax.swing.JTextField();
        ultima_sincronizacion_label = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        limpiar_log_boton = new javax.swing.JButton();
        synchronization_transfer_label = new javax.swing.JLabel();
        synchronization_transfer_info = new javax.swing.JLabel();
        synchronization_transfer_bar = new javax.swing.JProgressBar();
        synchronization_transfer_start = new javax.swing.JTextField();
        synchronization_transfer_end = new javax.swing.JTextField();
        depuracion_registros_log_btn = new javax.swing.JButton();
        depuracion_registros_todos_logs_btn = new javax.swing.JButton();
        synchronization_depuration_log_bar = new javax.swing.JProgressBar();
        synchronization_depuration_log_end = new javax.swing.JTextField();
        synchronization_depuration_log_info = new javax.swing.JLabel();
        sinchronization_depuration_log_label = new javax.swing.JLabel();
        synchronization_depuration_log_start = new javax.swing.JTextField();
        depuracion_registros_btn = new javax.swing.JButton();
        depuracion_registros_todos_btn = new javax.swing.JButton();
        ultima_sincronizacion_label1 = new javax.swing.JLabel();
        ultima_sincronizacion_label2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Version Log Kiel, se quita depuracion automática 2024");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        last_sync.setEditable(false);
        last_sync.setBackground(new java.awt.Color(255, 255, 255));
        last_sync.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        last_sync.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                last_syncActionPerformed(evt);
            }
        });
        getContentPane().add(last_sync, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 370, 190, 30));
        getContentPane().add(synchronization_depuration_bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 440, 230, 30));
        getContentPane().add(synchronization_rows_bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 80, 230, 30));
        getContentPane().add(synchronization_sales_bar_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 160, 110, 30));
        getContentPane().add(synchronization_returns_bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 200, 230, 30));
        getContentPane().add(synchronization_sales_validation_bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, 230, 30));
        getContentPane().add(synchronization_sales_bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 160, 110, 30));

        url_field.setEditable(false);
        url_field.setBackground(new java.awt.Color(255, 255, 255));
        url_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                url_fieldActionPerformed(evt);
            }
        });
        getContentPane().add(url_field, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 1060, 30));

        synchronization_rows_start.setEditable(false);
        synchronization_rows_start.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_rows_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_rows_startActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_rows_start, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 80, 160, 30));

        synchronization_sales_start.setEditable(false);
        synchronization_sales_start.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_sales_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_sales_startActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_sales_start, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 160, 160, 30));

        synchronization_returns_start.setEditable(false);
        synchronization_returns_start.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_returns_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_returns_startActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_returns_start, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 200, 160, 30));

        synchronization_movements_start.setEditable(false);
        synchronization_movements_start.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_movements_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_movements_startActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_movements_start, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 240, 160, 30));

        synchronization_sales_validation_start.setEditable(false);
        synchronization_sales_validation_start.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_sales_validation_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_sales_validation_startActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_sales_validation_start, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 280, 160, 30));

        synchronization_product_provider_start.setEditable(false);
        synchronization_product_provider_start.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_product_provider_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_product_provider_startActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_product_provider_start, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 320, 160, 30));

        synchronization_rows_end.setEditable(false);
        synchronization_rows_end.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_rows_end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_rows_endActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_rows_end, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 80, 160, 30));

        synchronization_sales_end.setEditable(false);
        synchronization_sales_end.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_sales_end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_sales_endActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_sales_end, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 160, 160, 30));

        synchronization_returns_end.setEditable(false);
        synchronization_returns_end.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_returns_end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_returns_endActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_returns_end, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 200, 160, 30));

        synchronization_movements_end.setEditable(false);
        synchronization_movements_end.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_movements_end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_movements_endActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_movements_end, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 240, 160, 30));

        synchronization_sales_validation_end.setEditable(false);
        synchronization_sales_validation_end.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_sales_validation_end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_sales_validation_endActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_sales_validation_end, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 280, 160, 30));

        synchronization_product_provider_end.setEditable(false);
        synchronization_product_provider_end.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_product_provider_end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_product_provider_endActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_product_provider_end, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 320, 160, 30));

        synchronization_depuration_end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_depuration_endActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_depuration_end, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 440, 160, 30));
        getContentPane().add(synchronization_movements_bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, 110, 30));
        getContentPane().add(synchronization_movements_bar_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 240, 110, 30));
        getContentPane().add(synchronization_product_provider_bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 320, 110, 30));
        getContentPane().add(synchronization_product_provider_bar_update, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 320, 110, 30));

        synchronization_rows_number.setEditable(false);
        synchronization_rows_number.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_rows_number.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_rows_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_rows_numberActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_rows_number, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 80, 80, 30));

        synchronization_sales_number.setEditable(false);
        synchronization_sales_number.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_sales_number.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_sales_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_sales_numberActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_sales_number, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 160, 80, 30));

        synchronization_returns_number.setEditable(false);
        synchronization_returns_number.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_returns_number.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_returns_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_returns_numberActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_returns_number, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 200, 80, 30));

        synchronization_movements_number.setEditable(false);
        synchronization_movements_number.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_movements_number.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_movements_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_movements_numberActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_movements_number, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 240, 80, 30));

        synchronization_sales_validation_number.setEditable(false);
        synchronization_sales_validation_number.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_sales_validation_number.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_sales_validation_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_sales_validation_numberActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_sales_validation_number, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 280, 80, 30));

        synchronization_product_provider_number.setEditable(false);
        synchronization_product_provider_number.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_product_provider_number.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_product_provider_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_product_provider_numberActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_product_provider_number, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 320, 80, 30));

        synchronization_transfer_number.setEditable(false);
        synchronization_transfer_number.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_transfer_number.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_transfer_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_transfer_numberActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_transfer_number, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, 80, 30));

        synchronization_movements_upload.setEditable(false);
        synchronization_movements_upload.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_movements_upload.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_movements_upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_movements_uploadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_movements_upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 240, 80, 30));

        synchronization_transfer_upload.setEditable(false);
        synchronization_transfer_upload.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_transfer_upload.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_transfer_upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_transfer_uploadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_transfer_upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 120, 80, 30));

        synchronization_sales_validation_upload.setEditable(false);
        synchronization_sales_validation_upload.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_sales_validation_upload.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_sales_validation_upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_sales_validation_uploadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_sales_validation_upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 280, 80, 30));

        synchronization_product_provider_upload.setEditable(false);
        synchronization_product_provider_upload.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_product_provider_upload.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_product_provider_upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_product_provider_uploadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_product_provider_upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 320, 80, 30));

        synchronization_rows_upload.setEditable(false);
        synchronization_rows_upload.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_rows_upload.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_rows_upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_rows_uploadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_rows_upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 80, 80, 30));

        synchronization_sales_upload.setEditable(false);
        synchronization_sales_upload.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_sales_upload.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_sales_upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_sales_uploadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_sales_upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 160, 80, 30));

        synchronization_returns_upload.setEditable(false);
        synchronization_returns_upload.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_returns_upload.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_returns_upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_returns_uploadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_returns_upload, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 200, 80, 30));

        synchronization_movements_download.setEditable(false);
        synchronization_movements_download.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_movements_download.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_movements_download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_movements_downloadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_movements_download, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 240, 80, 30));

        synchronization_transfer_download.setEditable(false);
        synchronization_transfer_download.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_transfer_download.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_transfer_download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_transfer_downloadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_transfer_download, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 120, 80, 30));

        synchronization_sales_validation_download.setEditable(false);
        synchronization_sales_validation_download.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_sales_validation_download.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_sales_validation_download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_sales_validation_downloadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_sales_validation_download, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 280, 80, 30));

        synchronization_product_provider_download.setEditable(false);
        synchronization_product_provider_download.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_product_provider_download.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_product_provider_download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_product_provider_downloadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_product_provider_download, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 320, 80, 30));

        synchronization_rows_download.setEditable(false);
        synchronization_rows_download.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_rows_download.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_rows_download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_rows_downloadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_rows_download, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 80, 80, 30));

        synchronization_sales_download.setEditable(false);
        synchronization_sales_download.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_sales_download.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_sales_download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_sales_downloadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_sales_download, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 160, 80, 30));

        synchronization_returns_download.setEditable(false);
        synchronization_returns_download.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_returns_download.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        synchronization_returns_download.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_returns_downloadActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_returns_download, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 200, 80, 30));

        logArea.setColumns(20);
        logArea.setRows(5);
        jScrollPane1.setViewportView(logArea);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, 1130, 200));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Por Bajar");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, 50, 80, 30));

        url_api_label.setText("URL API :");
        getContentPane().add(url_api_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 70, 30));

        synchronization_depuration_info.setText("...");
        getContentPane().add(synchronization_depuration_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 430, 30, 30));

        synchronization_returns_label.setText("Devoluciones");
        getContentPane().add(synchronization_returns_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 150, 30));

        synchronization_movements_label.setText("Movimientos de Almacén");
        getContentPane().add(synchronization_movements_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 240, 150, 30));

        synchronization_sales_validation_label.setText("Validación de ventas");
        getContentPane().add(synchronization_sales_validation_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 280, 150, 30));

        synchronization_product__provider_label.setText("Movimientos Prov. Prod.");
        getContentPane().add(synchronization_product__provider_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, 150, 30));

        synchronization_sales_label.setText("Ventas");
        getContentPane().add(synchronization_sales_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 150, 30));

        synchronization_rows_info.setText("...");
        getContentPane().add(synchronization_rows_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 30, 30));

        synchronization_sales_info.setText("...");
        getContentPane().add(synchronization_sales_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 30, 30));

        synchronization_returns_info.setText("...");
        getContentPane().add(synchronization_returns_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 30, 30));

        synchronization_movements_info.setText("...");
        getContentPane().add(synchronization_movements_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 240, 30, 30));

        synchronization_sales_validation_info.setText("...");
        getContentPane().add(synchronization_sales_validation_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 30, 30));

        synchronization_product_provider_info.setText("...");
        getContentPane().add(synchronization_product_provider_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 30, 30));

        synchronization_rows_label.setText("Registros Sincronizacion");
        getContentPane().add(synchronization_rows_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 150, 30));

        sinchronization_depuration_label.setText("Depuración Sinc.");
        getContentPane().add(sinchronization_depuration_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 150, 30));

        synchronization_depuration_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_depuration_startActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_depuration_start, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 440, 160, 30));

        intervalo_sincronizacion_label.setText("Intervalo de sincronización : ");
        getContentPane().add(intervalo_sincronizacion_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 370, 210, 30));

        time_interval_field.setEditable(false);
        time_interval_field.setBackground(new java.awt.Color(255, 255, 255));
        time_interval_field.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        time_interval_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                time_interval_fieldActionPerformed(evt);
            }
        });
        getContentPane().add(time_interval_field, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 370, 230, 30));

        ultima_sincronizacion_label.setText("Última sincronización exitosa : ");
        getContentPane().add(ultima_sincronizacion_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 220, 30));

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Hora inicio");
        getContentPane().add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 50, 160, 30));

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Hora fin");
        getContentPane().add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 50, 160, 30));

        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Reg x vuelta :");
        getContentPane().add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 50, 80, 30));

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Por Subir");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 50, 80, 30));

        limpiar_log_boton.setText("Limpiar Log");
        limpiar_log_boton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiar_log_botonActionPerformed(evt);
            }
        });
        getContentPane().add(limpiar_log_boton, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 740, 1130, 30));

        synchronization_transfer_label.setText("Transferencias");
        getContentPane().add(synchronization_transfer_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 150, 30));

        synchronization_transfer_info.setText("...");
        getContentPane().add(synchronization_transfer_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 30, 30));
        getContentPane().add(synchronization_transfer_bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 230, 30));

        synchronization_transfer_start.setEditable(false);
        synchronization_transfer_start.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_transfer_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_transfer_startActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_transfer_start, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 120, 160, 30));

        synchronization_transfer_end.setEditable(false);
        synchronization_transfer_end.setBackground(new java.awt.Color(255, 255, 255));
        synchronization_transfer_end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_transfer_endActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_transfer_end, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 120, 160, 30));

        depuracion_registros_log_btn.setText("Ejecutar Depuracion LOGS");
        depuracion_registros_log_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depuracion_registros_log_btnActionPerformed(evt);
            }
        });
        getContentPane().add(depuracion_registros_log_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 490, 180, 30));

        depuracion_registros_todos_logs_btn.setText("Borrar todo");
        depuracion_registros_todos_logs_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depuracion_registros_todos_logs_btnActionPerformed(evt);
            }
        });
        getContentPane().add(depuracion_registros_todos_logs_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 490, 100, 30));
        getContentPane().add(synchronization_depuration_log_bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 490, 230, 30));

        synchronization_depuration_log_end.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_depuration_log_endActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_depuration_log_end, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 490, 160, 30));

        synchronization_depuration_log_info.setText("...");
        getContentPane().add(synchronization_depuration_log_info, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 480, 30, 30));

        sinchronization_depuration_log_label.setText("Depuración LOGS");
        getContentPane().add(sinchronization_depuration_log_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, 150, 30));

        synchronization_depuration_log_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                synchronization_depuration_log_startActionPerformed(evt);
            }
        });
        getContentPane().add(synchronization_depuration_log_start, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 490, 160, 30));

        depuracion_registros_btn.setText("Ejecutar Depuracion Reg");
        depuracion_registros_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depuracion_registros_btnActionPerformed(evt);
            }
        });
        getContentPane().add(depuracion_registros_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 440, 180, 30));

        depuracion_registros_todos_btn.setText("Borrar todo");
        depuracion_registros_todos_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depuracion_registros_todos_btnActionPerformed(evt);
            }
        });
        getContentPane().add(depuracion_registros_todos_btn, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 440, 100, 30));

        ultima_sincronizacion_label1.setText("Próxima depuración en :");
        getContentPane().add(ultima_sincronizacion_label1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 410, 160, 30));

        ultima_sincronizacion_label2.setText("Inicio :");
        getContentPane().add(ultima_sincronizacion_label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 410, 160, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void last_syncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_last_syncActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_last_syncActionPerformed

    private void url_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_url_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_url_fieldActionPerformed

    private void synchronization_rows_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_rows_startActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_rows_startActionPerformed

    private void synchronization_sales_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_sales_startActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_sales_startActionPerformed

    private void synchronization_returns_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_returns_startActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_returns_startActionPerformed

    private void synchronization_movements_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_movements_startActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_movements_startActionPerformed

    private void synchronization_sales_validation_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_sales_validation_startActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_sales_validation_startActionPerformed

    private void synchronization_product_provider_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_product_provider_startActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_product_provider_startActionPerformed

    private void synchronization_rows_endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_rows_endActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_rows_endActionPerformed

    private void synchronization_sales_endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_sales_endActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_sales_endActionPerformed

    private void synchronization_returns_endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_returns_endActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_returns_endActionPerformed

    private void synchronization_movements_endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_movements_endActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_movements_endActionPerformed

    private void synchronization_sales_validation_endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_sales_validation_endActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_sales_validation_endActionPerformed

    private void synchronization_product_provider_endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_product_provider_endActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_product_provider_endActionPerformed

    private void synchronization_depuration_endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_depuration_endActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_depuration_endActionPerformed

    private void synchronization_rows_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_rows_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_rows_numberActionPerformed

    private void synchronization_sales_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_sales_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_sales_numberActionPerformed

    private void synchronization_returns_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_returns_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_returns_numberActionPerformed

    private void synchronization_movements_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_movements_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_movements_numberActionPerformed

    private void synchronization_sales_validation_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_sales_validation_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_sales_validation_numberActionPerformed

    private void synchronization_product_provider_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_product_provider_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_product_provider_numberActionPerformed

    private void synchronization_transfer_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_transfer_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_transfer_numberActionPerformed

    private void synchronization_movements_uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_movements_uploadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_movements_uploadActionPerformed

    private void synchronization_transfer_uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_transfer_uploadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_transfer_uploadActionPerformed

    private void synchronization_sales_validation_uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_sales_validation_uploadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_sales_validation_uploadActionPerformed

    private void synchronization_product_provider_uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_product_provider_uploadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_product_provider_uploadActionPerformed

    private void synchronization_rows_uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_rows_uploadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_rows_uploadActionPerformed

    private void synchronization_sales_uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_sales_uploadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_sales_uploadActionPerformed

    private void synchronization_returns_uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_returns_uploadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_returns_uploadActionPerformed

    private void synchronization_movements_downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_movements_downloadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_movements_downloadActionPerformed

    private void synchronization_transfer_downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_transfer_downloadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_transfer_downloadActionPerformed

    private void synchronization_sales_validation_downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_sales_validation_downloadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_sales_validation_downloadActionPerformed

    private void synchronization_product_provider_downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_product_provider_downloadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_product_provider_downloadActionPerformed

    private void synchronization_rows_downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_rows_downloadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_rows_downloadActionPerformed

    private void synchronization_sales_downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_sales_downloadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_sales_downloadActionPerformed

    private void synchronization_returns_downloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_returns_downloadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_returns_downloadActionPerformed

    private void synchronization_depuration_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_depuration_startActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_depuration_startActionPerformed

    private void time_interval_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_time_interval_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_time_interval_fieldActionPerformed

    private void synchronization_transfer_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_transfer_startActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_transfer_startActionPerformed

    private void synchronization_transfer_endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_transfer_endActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_transfer_endActionPerformed

    private void depuracion_registros_log_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depuracion_registros_log_btnActionPerformed
        try {
            String resp_temp = depurationLogProcess( false );
            if (!"ok".equals(resp_temp)) {
                  synchronization_depuration_log_info.setText(resp_temp);
                  synchronization_depuration_log_bar.setValue(100);
                  synchronization_depuration_log_bar.setBackground(Color.red);
                  synchronization_depuration_log_bar.setForeground(Color.red);
               } else {
                  synchronization_depuration_log_info.setText(resp_temp);
                  synchronization_depuration_log_bar.setValue(100);
                  synchronization_depuration_log_bar.setBackground(Color.green);
                  synchronization_depuration_log_bar.setForeground(Color.green);
                  //synchronization_depuration_end.setText("" + dtf.format(LocalDateTime.now()));
               }
        } catch (IOException ex) {
            Logger.getLogger(infoSinccronizacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_depuracion_registros_log_btnActionPerformed

    private void depuracion_registros_todos_logs_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depuracion_registros_todos_logs_btnActionPerformed
        try {
            String resp_temp = depurationLogProcess( true );
            if (!"ok".equals(resp_temp)) {
                  synchronization_depuration_log_info.setText(resp_temp);
                  synchronization_depuration_log_bar.setValue(100);
                  synchronization_depuration_log_bar.setBackground(Color.red);
                  synchronization_depuration_log_bar.setForeground(Color.red);
               } else {
                  synchronization_depuration_log_info.setText(resp_temp);
                  synchronization_depuration_log_bar.setValue(100);
                  synchronization_depuration_log_bar.setBackground(Color.green);
                  synchronization_depuration_log_bar.setForeground(Color.green);
                  //synchronization_depuration_end.setText("" + dtf.format(LocalDateTime.now()));
               }
        } catch (IOException ex) {
            Logger.getLogger(infoSinccronizacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_depuracion_registros_todos_logs_btnActionPerformed

    private void synchronization_depuration_log_endActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_depuration_log_endActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_depuration_log_endActionPerformed

    private void synchronization_depuration_log_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_synchronization_depuration_log_startActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_synchronization_depuration_log_startActionPerformed

    private void depuracion_registros_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depuracion_registros_btnActionPerformed
        try {
            String resp_temp = depurationProcess( false );
            if (!"ok".equals(resp_temp)) {
                  synchronization_depuration_info.setText(resp_temp);
                  synchronization_depuration_bar.setValue(100);
                  synchronization_depuration_bar.setBackground(Color.red);
                  synchronization_depuration_bar.setForeground(Color.red);
               } else {
                  synchronization_depuration_info.setText(resp_temp);
                  synchronization_depuration_bar.setValue(100);
                  synchronization_depuration_bar.setBackground(Color.green);
                  synchronization_depuration_bar.setForeground(Color.green);
                  //synchronization_depuration_end.setText("" + dtf.format(LocalDateTime.now()));
               }
        } catch (IOException ex) {
            Logger.getLogger(infoSinccronizacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_depuracion_registros_btnActionPerformed
    
    private int initialSeconds = 1 * 60; // tiempo inicial (10 minutos)
    private int remainingSeconds = initialSeconds;
    private void startTimer() {
    Timer timer = new Timer(1000, new ActionListener() {
        public void actionPerformed(ActionEvent e) {
            if (remainingSeconds > 0) {
                remainingSeconds--;

                int hrs = remainingSeconds / 3600;
                int mins = (remainingSeconds % 3600) / 60;
                int secs = remainingSeconds % 60;

                //String tiempoFormateado = String.format("Tiempo restante: %02d:%02d:%02d", hrs, mins, secs);
                synchronization_depuration_end.setText(String.format("%02d:%02d:%02d", hrs, mins, secs));
                synchronization_depuration_log_end.setText(String.format("%02d:%02d:%02d", hrs, mins, secs));
            } else {
                //manda a llamar servivios de depuracion
                try {
                    depurationProcess(true);
                    depurationLogProcess(true);
                } catch (IOException ex) {
                    Logger.getLogger(infoSinccronizacion.class.getName()).log(Level.SEVERE, null, ex);
                }
                // Reiniciar el contador
                remainingSeconds = initialSeconds;
            }
        }
    });
    timer.start();
}
    /*private void startTimer() {
        int seconds = 10000;
        Timer timer = new Timer(1000, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                timmer_seconds++;
                //timerLabel.setText("Tiempo: " + seconds + "s");
                int hrs = timmer_seconds / 3600;
                int mins = (timmer_seconds % 3600) / 60;
                int secs = timmer_seconds % 60;

            // Formateamos para que siempre tenga dos dígitos
            String tiempoFormateado = String.format("Tiempo: %02d:%02d:%02d", hrs, mins, secs);
                synchronization_depuration_end.setText(String.format("%02d:%02d:%02d", hrs, mins, secs));
                synchronization_depuration_log_end.setText(String.format("%02d:%02d:%02d", hrs, mins, secs));
            }
        });
        timer.start();
    }*/
    
    private void depuracion_registros_todos_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depuracion_registros_todos_btnActionPerformed
        try {
            String resp_temp = depurationProcess( true );
            if (!"ok".equals(resp_temp)) {
                  synchronization_depuration_info.setText(resp_temp);
                  synchronization_depuration_bar.setValue(100);
                  synchronization_depuration_bar.setBackground(Color.red);
                  synchronization_depuration_bar.setForeground(Color.red);
               } else {
                  synchronization_depuration_info.setText(resp_temp);
                  synchronization_depuration_bar.setValue(100);
                  synchronization_depuration_bar.setBackground(Color.green);
                  synchronization_depuration_bar.setForeground(Color.green);
                  //synchronization_depuration_end.setText("" + dtf.format(LocalDateTime.now()));
               }
        } catch (IOException ex) {
            Logger.getLogger(infoSinccronizacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_depuracion_registros_todos_btnActionPerformed

    private void limpiar_log_botonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiar_log_botonActionPerformed
        logArea.setText( "" );
    }//GEN-LAST:event_limpiar_log_botonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(infoSinccronizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(infoSinccronizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(infoSinccronizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(infoSinccronizacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new infoSinccronizacion(  ).setVisible(true);//api_local_path
            }
        });
    }
    
    public String depurationProcess( Boolean is_complete ) throws MalformedURLException, IOException{
        try {
            String urlParaVisitar = "http://localhost/" + this.api_local_path + "/rest_v2/crones/depurar_sincronizacion";
            StringBuilder resultado = new StringBuilder();
            URL url = new URL(urlParaVisitar);
            HttpURLConnection conexion = (HttpURLConnection) url.openConnection();
            conexion.setRequestMethod("POST");
            conexion.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
            conexion.setDoOutput(true);

            // Datos para enviar en el cuerpo del POST
            String urlParameters = "is_complete=" + is_complete; // Ajusta los parámetros según sea necesario

            // Enviar los datos
            DataOutputStream wr = new DataOutputStream(conexion.getOutputStream());
            wr.writeBytes(urlParameters);
            wr.flush();
            wr.close();

            // Leer la respuesta
            BufferedReader rd = new BufferedReader(new InputStreamReader(conexion.getInputStream()));
            String line;
            while ((line = rd.readLine()) != null) {
                resultado.append(line);
            }
            rd.close();

            // Imprimir el resultado
            System.out.println(resultado.toString());
            return resultado.toString();
        } catch (Exception e) {
            e.printStackTrace();
            return "Error";
        }
    }
    
    public String depurationLogProcess( Boolean is_complete ) throws MalformedURLException, IOException{
        try {
            String urlParaVisitar = "http://localhost/" + this.api_local_path + "/rest_v2/crones/depurar_logs";
            StringBuilder resultado = new StringBuilder();
            URL url = new URL(urlParaVisitar);
            HttpURLConnection conexion = (HttpURLConnection) url.openConnection();
            conexion.setRequestMethod("POST");
            conexion.setRequestProperty("Content-Type", "application/x-www-form-urlencoded");
            conexion.setDoOutput(true);

            // Datos para enviar en el cuerpo del POST
            String urlParameters = "is_complete=" + is_complete; // Ajusta los parámetros según sea necesario

            // Enviar los datos
            DataOutputStream wr = new DataOutputStream(conexion.getOutputStream());
            wr.writeBytes(urlParameters);
            wr.flush();
            wr.close();

            // Leer la respuesta
            BufferedReader rd = new BufferedReader(new InputStreamReader(conexion.getInputStream()));
            String line;
            while ((line = rd.readLine()) != null) {
                resultado.append(line);
            }
            rd.close();

            // Imprimir el resultado
            System.out.println(resultado.toString());
            return resultado.toString();
        } catch (Exception e) {
            e.printStackTrace();
            return "Error";
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton depuracion_registros_btn;
    public static javax.swing.JButton depuracion_registros_log_btn;
    public static javax.swing.JButton depuracion_registros_todos_btn;
    public static javax.swing.JButton depuracion_registros_todos_logs_btn;
    public static javax.swing.JLabel intervalo_sincronizacion_label;
    public static javax.swing.JLabel jLabel2;
    public static javax.swing.JLabel jLabel20;
    public static javax.swing.JLabel jLabel21;
    public static javax.swing.JLabel jLabel22;
    public static javax.swing.JLabel jLabel23;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTextField last_sync;
    public static javax.swing.JButton limpiar_log_boton;
    public static javax.swing.JTextArea logArea;
    public static javax.swing.JLabel sinchronization_depuration_label;
    public static javax.swing.JLabel sinchronization_depuration_log_label;
    public static javax.swing.JProgressBar synchronization_depuration_bar;
    public static javax.swing.JTextField synchronization_depuration_end;
    public static javax.swing.JLabel synchronization_depuration_info;
    public static javax.swing.JProgressBar synchronization_depuration_log_bar;
    public static javax.swing.JTextField synchronization_depuration_log_end;
    public static javax.swing.JLabel synchronization_depuration_log_info;
    public static javax.swing.JTextField synchronization_depuration_log_start;
    public static javax.swing.JTextField synchronization_depuration_start;
    public static javax.swing.JProgressBar synchronization_movements_bar;
    public static javax.swing.JProgressBar synchronization_movements_bar_update;
    public static javax.swing.JTextField synchronization_movements_download;
    public static javax.swing.JTextField synchronization_movements_end;
    public static javax.swing.JLabel synchronization_movements_info;
    public static javax.swing.JLabel synchronization_movements_label;
    public static javax.swing.JTextField synchronization_movements_number;
    public static javax.swing.JTextField synchronization_movements_start;
    public static javax.swing.JTextField synchronization_movements_upload;
    public static javax.swing.JLabel synchronization_product__provider_label;
    public static javax.swing.JProgressBar synchronization_product_provider_bar;
    public static javax.swing.JProgressBar synchronization_product_provider_bar_update;
    public static javax.swing.JTextField synchronization_product_provider_download;
    public static javax.swing.JTextField synchronization_product_provider_end;
    public static javax.swing.JLabel synchronization_product_provider_info;
    public static javax.swing.JTextField synchronization_product_provider_number;
    public static javax.swing.JTextField synchronization_product_provider_start;
    public static javax.swing.JTextField synchronization_product_provider_upload;
    public static javax.swing.JProgressBar synchronization_returns_bar;
    public static javax.swing.JTextField synchronization_returns_download;
    public static javax.swing.JTextField synchronization_returns_end;
    public static javax.swing.JLabel synchronization_returns_info;
    public static javax.swing.JLabel synchronization_returns_label;
    public static javax.swing.JTextField synchronization_returns_number;
    public static javax.swing.JTextField synchronization_returns_start;
    public static javax.swing.JTextField synchronization_returns_upload;
    public static javax.swing.JProgressBar synchronization_rows_bar;
    public static javax.swing.JTextField synchronization_rows_download;
    public static javax.swing.JTextField synchronization_rows_end;
    public static javax.swing.JLabel synchronization_rows_info;
    public static javax.swing.JLabel synchronization_rows_label;
    public static javax.swing.JTextField synchronization_rows_number;
    public static javax.swing.JTextField synchronization_rows_start;
    public static javax.swing.JTextField synchronization_rows_upload;
    public static javax.swing.JProgressBar synchronization_sales_bar;
    public static javax.swing.JProgressBar synchronization_sales_bar_update;
    public static javax.swing.JTextField synchronization_sales_download;
    public static javax.swing.JTextField synchronization_sales_end;
    public static javax.swing.JLabel synchronization_sales_info;
    public static javax.swing.JLabel synchronization_sales_label;
    public static javax.swing.JTextField synchronization_sales_number;
    public static javax.swing.JTextField synchronization_sales_start;
    public static javax.swing.JTextField synchronization_sales_upload;
    public static javax.swing.JProgressBar synchronization_sales_validation_bar;
    public static javax.swing.JTextField synchronization_sales_validation_download;
    public static javax.swing.JTextField synchronization_sales_validation_end;
    public static javax.swing.JLabel synchronization_sales_validation_info;
    public static javax.swing.JLabel synchronization_sales_validation_label;
    public static javax.swing.JTextField synchronization_sales_validation_number;
    public static javax.swing.JTextField synchronization_sales_validation_start;
    public static javax.swing.JTextField synchronization_sales_validation_upload;
    public static javax.swing.JProgressBar synchronization_transfer_bar;
    public static javax.swing.JTextField synchronization_transfer_download;
    public static javax.swing.JTextField synchronization_transfer_end;
    public static javax.swing.JLabel synchronization_transfer_info;
    public static javax.swing.JLabel synchronization_transfer_label;
    public static javax.swing.JTextField synchronization_transfer_number;
    public static javax.swing.JTextField synchronization_transfer_start;
    public static javax.swing.JTextField synchronization_transfer_upload;
    public static javax.swing.JTextField time_interval_field;
    public static javax.swing.JLabel ultima_sincronizacion_label;
    public static javax.swing.JLabel ultima_sincronizacion_label1;
    public static javax.swing.JLabel ultima_sincronizacion_label2;
    public static javax.swing.JLabel url_api_label;
    public static javax.swing.JTextField url_field;
    // End of variables declaration//GEN-END:variables
}
